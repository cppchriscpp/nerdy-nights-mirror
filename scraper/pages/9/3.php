<div class="mdl-card__title"><strong>bunnyboy</strong> posted on 
		
			
				
				May 16, 2010 at 1:45:46 PM 
			
			
			
			
		
	</div><div class="mdl-card__supporting-text">
					<div class="FTQUOTE"><i>Originally posted by: <b>Mario&apos;s Right Nut</b></i><br><br>This is pretty cool.  Thanks for the info.  For some reason, on my computer here, it looks like all of your paragraphs are in one line of text and you have to scroll way right off the screen to read the whole thing.  Is that a setting I have messed up?
<br>
<br>Any chance of expanding this to include SUROM?  I&apos;ve made it work, but it is not pretty.</div><br>Not sure about the formatting, blame Dain! &#xA0;Maybe it needs more P or DIV tags...
<div><br></div><div><span class="Apple-style-span" style="font-size: medium; "><b>PRG/WRAM Expansions</b></span></div><div>Ok, when I gave the max sizes above I lied! &#xA0;There are three boards that offer various expansion sizes. &#xA0;All of them use CHR RAM then steal CHR address bits to be used for PRG banks.</div><div><br></div><div><b><span class="Apple-style-span" style="font-size: small; ">SUROM</span></b></div><div>This board is used by DW3 and DW4. &#xA0;It uses 8KB of CHR RAM and the games set the CHR bank size to 8KB. &#xA0;That means neither CHR bank register is used for CHR, because there is only one bank. &#xA0;Instead the top bit of the CHR bank register (D4) becomes an additional top bit of the PRG Bank. &#xA0;That gives you 5 bank bits for 32 banks of 16KB, or 512KB of PRG ROM. &#xA0;Clearing the CHR bank D4 accesses the first 16 banks, and setting it accesses the second 16 banks.</div><div><br></div><div>In 8KB CHR mode the CHR bank 1 register is still ignored, so you only have to set CHR bank 0. &#xA0;However in 4KB CHR mode you have to set D4 in both registers the same or else the PRG will be swapping while the screen is being rendered without you controlling it. &#xA0;When the PPU switches between background and sprites your PRG would also switch.</div><div><br></div><div>Typically you will want to use 16KB PRG mode and keep all your bank switching code in the last bank. &#xA0;Doing the PRG switch happens in 2 steps (CHR bank register and PRG bank register) and you don&apos;t want the first step to switch away your code. &#xA0;The other method is to copy your bank switching code to RAM and execute it there.</div><div><br></div><div><b><span class="Apple-style-span" style="font-size: small; ">SOROM</span></b></div><div>This board is used by Genghis Khan, Nobunaga, and a few other games. &#xA0;The same idea of stealing unused CHR bits is used to expand the WRAM to 16KB. &#xA0;This time the fourth bit of the CHR Bank register (D3) becomes the WRAM bank select. &#xA0;Clear the bit to select the lower 8KB of WRAM for the $6000-7FFF range, and set the bit to select the upper 8KB. &#xA0;The board uses two physically separate chips and only one is battery backed, so only one of the 8KB banks is battery backed.</div><div><br></div><div>Like with SUROM when using 4KB mode you need to set D3 the same in both CHR registers.</div><div><br></div><div><b><span class="Apple-style-span" style="font-size: small; ">SXROM</span></b></div><div>This board is only used in a couple Japanese games like Final Fantasy 1+2. &#xA0;It is a combination of SUROM and SOROM to expand both PRG ROM and WRAM. &#xA0;Makes sense when they pack two games on one cart that each need half those specs! &#xA0;Unlike SOROM there is only one physical WRAM chip so all 16KB is battery backed.</div><div><br></div><div>D4 still picks upper or lower 256KB PRG, and D3 still picks upper or lower 8KB WRAM.</div><div><br></div><div>If someone wanted to wire up a custom board, D2 and D1 could be used in the same way for even more PRG.</div>
				</div><div class="mdl-card--border"></div>