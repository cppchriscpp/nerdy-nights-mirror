
					<b>Last Week</b>: <a href="http://www.nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=22610" target="_blank" original-href="http://www.nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=22610">Square 2 and Triangle Basics</a><br><br><b>This week</b>: We will learn about periods and build a period lookup table that spans 8 octaves.<br><br><b><font size="4">Periods</font></b><br><br>In
the last two lessons, I&apos;ve been giving you the values to plug into the
11-bit periods for the Square and Triangle channels.&#xA0; I haven&apos;t been
giving you an explanation of what a period is, or where I got those
numbers.&#xA0; So this week we&apos;re going to learn about periods.<br><b><br>
What is a period?</b><br>A period refers to the length of a wave, or rather the <i>time</i> length of the <i>repeating</i> part of a wave.&#xA0; Take a look at this square wave (x-axis is time):<br><br><div id="xdzs" style="text-align: left;"><img style="width: 240px; height: 50px;" src="images/missing/File_id_d36ccdg_32dh4jjkdf_b" original-src="http://docs.google.com/File?id=d36ccdg_32dh4jjkdf_b"></div>Notice
how it is repeating.&#xA0; It starts high and remains high for 2 time
units.&#xA0; Then it goes low and remains low for 2 time units.&#xA0; Then it
repeats.&#xA0; When we say period, we are talking about the horizontal time
length of this repeating wave.&#xA0; In this case, the period is 4 time
units.&#xA0; The longer a period is, the lower the note will sound.&#xA0;&#xA0;
Conversely, the shorter a period is, the higher the note will sound.&#xA0;
Look at these 3 Square waves:<br><br>Period = 6 time units<br><div id="o6dq" style="text-align: left;"><img style="width: 240px; height: 50px;" src="images/missing/File_id_d36ccdg_33fm9jm9dg_b" original-src="http://docs.google.com/File?id=d36ccdg_33fm9jm9dg_b"></div><br>Period = 4 time units<br><div id="wj8x" style="text-align: left;"><img style="width: 240px; height: 50px;" src="images/missing/File_id_d36ccdg_34gmf46jdj_b" original-src="http://docs.google.com/File?id=d36ccdg_34gmf46jdj_b"></div><br>Period = 1 time unit<br><div id="mw1w" style="text-align: left;"><img style="width: 240px; height: 50px;" src="images/missing/File_id_d36ccdg_354r6gfhx5_b" original-src="http://docs.google.com/File?id=d36ccdg_354r6gfhx5_b"></div><br>The
top wave has the longest period (6 time units) and it will sound the
lowest.&#xA0; The bottom wave has a short period (1 time unit) and will
sound higher than the other two.<br><br>On the NES, we write an 11-bit
period to the APU ports.&#xA0; The smaller the number, the shorter the
period, the higher the note.&#xA0; Larger numbers = longer periods = lower
notes.&#xA0; Look at the following code snippets that write an 11-bit period
to the Square 1 ports:<br><br><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda #$C9</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4002</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda #$05</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4003 ;period $5C9: large number = long period = low note</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; ;----</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda #$09</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4002</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda #$00</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4003 ;period $009: small number = short period = very high note</span><br><br><b>Periods -&gt; Notes</b><br>So how do we know which 11-bit period values correspond to which notes?&#xA0; The magic forumla is:<br><br>&#xA0;&#xA0;&#xA0; P = C/(F*16) - 1<br>&#xA0;&#xA0; &#xA0;<br>&#xA0;&#xA0;&#xA0; P = Period<br>&#xA0;&#xA0;&#xA0; C = CPU speed (in Hz) <br>&#xA0;&#xA0;&#xA0; F = Frequency of the note (also in Hz). &#xA0;<br>&#xA0;&#xA0; &#xA0;<br>The
value of C differs between NTSC and PAL machines, which is why a game
made for NTSC will sound funny on a PAL NES, and vice-versa.<br><br>To
find the period values for notes, we will have to look up note
frequencies and plug them into the formula.&#xA0; Or we can cross our
fingers and hope somebody has already done the work for us and put the
answers in an easy-to-read table.&#xA0; Lucky for us a cool fellow named
Celius has done just that, for both NTSC and PAL.&#xA0; Here are the charts:<br><br><a href="downloads/missing/NotesTableNTSC.txt" target="_blank" original-href="http://www.freewebs.com/the_bott/NotesTableNTSC.txt">http://www.freewebs.com/the_bott/NotesTableNTSC.txt</a><br>
<a href="downloads/missing/NotesTablePAL.txt" target="_blank" original-href="http://www.freewebs.com/the_bott/NotesTablePAL.txt">http://www.freewebs.com/the_bott/NotesTablePAL.txt</a><br>
<br><b><font size="4">Lookup Tables</font></b><br>It is fairly common practice to store period values in a lookup table.&#xA0; A <b>lookup table</b>
is a table of pre-calculated data stored in ROM.&#xA0; Like an answer
sheet.&#xA0; Lookup tables are used to cut down on complicated,
time-consuming calculations.&#xA0; Let&apos;s look at a trivial example.&#xA0; Let&apos;s
say you want a subroutine that takes a value in A and returns 3^A.&#xA0; If
you took the brute-force approach, you might write something like this:<br><br><span style="font-family: Courier New;">multiplier .rs 1</span><br style="font-family: Courier New;"><br style="font-family: Courier New;"><span style="font-family: Courier New;">; takes a value (0-5) in A and returns 3^A</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">three_to_the_a:</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; bne .not_zero</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda #$01&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;3^0 is 1</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; rts</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">.not_zero:</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; tay</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda #$03</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">.loop:&#xA0;&#xA0; &#xA0;</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta multiplier</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; dey</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; beq .done</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; clc</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; adc multiplier</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; adc multiplier</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; jmp .loop</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">.done:</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; rts</span><br>&#xA0;&#xA0; &#xA0;<br>It works, but it&apos;s not very pretty.&#xA0; Here is how we would do it with a lookup table:<br><br><span style="font-family: Courier New;">;lookup table with pre-calculated answers</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">powers_of_3:</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .byte 1, 3, 9, 27, 81, 243</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">three_to_the_a:</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; tay</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda powers_of_3, y</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; rts</span><br>&#xA0;&#xA0; &#xA0;<br>Easier to code.&#xA0; Easier to read.&#xA0; And it runs faster too.<br><br><b>NESASM3 Tip#1: Local Labels</b><br>You may have noticed in the above example that I put a period in front of some labels: <b>.done</b>, <b>.loop</b>, <b>.not_zero</b>.&#xA0; NESASM3 treats these as local labels.&#xA0; There are two types of labels: global and local.&#xA0; A <b>global label</b> exists across the whole program and must be unique.&#xA0; A <b>local label</b>
only exists between two global labels.&#xA0; This means that we can reuse
the names of local labels - they only need to be unique within their
scope.&#xA0; Using local labels saves you the trouble of having to create
unique names for common case labels (like looping).&#xA0; I tend to use
local labels for all labels that occur within subroutines.&#xA0; To make a
label local, stick a period in front of it.<br>&#xA0;&#xA0; &#xA0;<br><font size="3"><b>Note Lookup Table</b></font><br>Let&apos;s
take Celius&apos;s tables and turn them into a note lookup table. Period
values are 11 bits so we will need to define our lookup table using
words.&#xA0; Note that .word is the same as .dw.&#xA0; Here is a note_table for
NTSC:<br><br><span style="font-family: Courier New;">;Note: octaves in music traditionally start from C, not A. &#xA0;</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; I&apos;ve adjusted my octave numbers to reflect this.</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">note_table:</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; $07F1, $0780, $0713 ; A1-B1 ($00-$02)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word $06AD, $064D, $05F3, $059D, $054D, $0500, $04B8, $0475, $0435, $03F8, $03BF, $0389 ; C2-B2 ($03-$0E)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word $0356, $0326, $02F9, $02CE, $02A6, $027F, $025C, $023A, $021A, $01FB, $01DF, $01C4 ; C3-B3 ($0F-$1A)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word $01AB, $0193, $017C, $0167, $0151, $013F, $012D, $011C, $010C, $00FD, $00EF, $00E2 ; C4-B4 ($1B-$26)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word $00D2, $00C9, $00BD, $00B3, $00A9, $009F, $0096, $008E, $0086, $007E, $0077, $0070 ; C5-B5 ($27-$32)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word $006A, $0064, $005E, $0059, $0054, $004F, $004B, $0046, $0042, $003F, $003B, $0038 ; C6-B6 ($33-$3E)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word $0034, $0031, $002F, $002C, $0029, $0027, $0025, $0023, $0021, $001F, $001D, $001B ; C7-B7 ($3F-$4A)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word $001A, $0018, $0017, $0015, $0014, $0013, $0012, $0011, $0010, $000F, $000E, $000D ; C8-B8 ($4B-$56)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .word $000C, $000C, $000B, $000A, $000A, $0009, $0008&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ; C9-F#9 ($57-$5D)</span><br style="font-family: Courier New;"><br>Notice
that at the highest octaves, some notes have the same value (C9 and C#9
for example).&#xA0; This is due to rounding.&#xA0; We lose precision the higher
we go, and a lot of the highest notes will sound out of tune as a
result.&#xA0; So in songs we probably wouldn&apos;t use octaves 8 and 9.&#xA0; These
high notes could be utilized for sound effects though, so we&apos;ll leave
them in.<br>&#xA0;&#xA0; &#xA0;<br>Once we have a note lookup table, we use the note
we want as an index into the table and pull the period values from it,
like this:<br>&#xA0;&#xA0; &#xA0;<br><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda #$0C&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;the 13th entry in the table (A2)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; asl a&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;multiply by 2 because we are indexing into a table of words</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; tay</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda note_table, y&#xA0;&#xA0; ;read the low byte of the period</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4002&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;write to SQ1_LO</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda note_table+1, y ;read the high byte of the period</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4003&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;write to SQ1_HI</span><br>&#xA0;&#xA0; &#xA0;<br>To make it easier to know which index to use for each note, we can create a list of <b>symbols</b>:<br><br><span style="font-family: Courier New;">;Note: octaves in music traditionally start at C, not A</span><br style="font-family: Courier New;"><br style="font-family: Courier New;"><span style="font-family: Courier New;">;Octave 1</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">A1 = $00&#xA0;&#xA0;&#xA0; ;&quot;1&quot; means octave 1.</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">As1 = $01&#xA0;&#xA0; ;&quot;s&quot; means &quot;sharp&quot;</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">Bb1 = $01&#xA0;&#xA0; ;&quot;b&quot; means &quot;flat&quot;.&#xA0; A# == Bb</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">B1 = $02</span><br style="font-family: Courier New;"><br style="font-family: Courier New;"><span style="font-family: Courier New;">;Octave 2</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">C2 = $03</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">Cs2 = $04</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">Db2 = $04</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">D2 = $05</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">;...</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">A2 = $0C</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">As2 = $0D</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">Bb2 = $0D</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">B2 = $0E</span><br style="font-family: Courier New;"><br style="font-family: Courier New;"><span style="font-family: Courier New;">;Octave 3</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">C3 = $0F</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">;... etc</span><br><br>Now we can use our new symbols instead of the actual index values:<br><br><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda <b>#A2</b>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;A2.&#xA0; #A2 will evaluate to #$0C</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; asl a&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;multiply by 2 because we are indexing into a table of words</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; tay</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda note_table, y&#xA0;&#xA0; ;read the low byte of the period</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4002&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;write to SQ1_LO</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda note_table+1, y ;read the high byte of the period</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4003&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0; ;write to SQ1_HI</span><br>&#xA0;&#xA0; &#xA0;<br>And if later we want to have a series of notes, symbols are much easier to read and alter:<br><br><span style="font-family: Courier New;">sound_data:</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .byte C3, E3, G3, B3, C4, E4, G4, B4, C5 ; Cmaj7 (CEGB)</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">sound_data_no_symbols:</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; .byte $0F, $13, $16, $1A, $1B, $1F, $22, $26, $27 ;same as above, but hard to read. Cmaj7 (CEGB)</span><br>&#xA0;&#xA0; &#xA0;<br><br><b>Low Notes On Squares (Sweep Unit)</b><br>One
last thing needs to be mentioned.&#xA0; It&apos;s very important.&#xA0; It has to do
with the Square channels&apos; sweep units.&#xA0;&#xA0; The sweep units can silence
the square channels in certain situations (Periods &gt;= $400, our
lowest notes), <i>even when disabled</i>.&#xA0; We&apos;ll have to take a quick look at the sweep unit ports to solve this problem.<br><br><span style="font-family: Courier New;">SQ1_SWEEP ($4001), SQ2_SWEEP ($4005)</span><br style="font-family: Courier New;">
<br style="font-family: Courier New;">
<span style="font-family: Courier New;">76543210</span><br style="font-family: Courier New;">
<span style="font-family: Courier New;">||||||||</span><br style="font-family: Courier New;">
<span style="font-family: Courier New;">|||||+++- Shift</span><br style="font-family: Courier New;">
<span style="font-family: Courier New;">||||+---- Negate</span><br style="font-family: Courier New;">
<span style="font-family: Courier New;">|+++----- Sweep Unit Period</span><br style="font-family: Courier New;">
<span style="font-family: Courier New;">+-------- Enable (1: enabled; 0: disabled)</span><br><br>I&apos;m not going to go into how it works now, but the unwanted silencing of low notes can be circumvented by <b>setting the negate flag</b>:<br><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; lda #$08&#xA0;&#xA0;&#xA0; ;set Negate flag on the sweep unit</span><br style="font-family: Courier New;"><span style="font-family: Courier New;">&#xA0;&#xA0;&#xA0; sta $4001&#xA0;&#xA0; ;or $4005 for Square 2.</span><br>&#xA0;&#xA0; &#xA0;<br>If you really want to know why, check the Sweep Unit section of blargg&apos;s <a href="scraper/files/apu_ref.txt" target="_blank" original-href="http://www.slack.net/%7Eant/nes-emu/apu_ref.txt">NES APU Sound Hardware Technical Reference</a>.<br><br><b>What about PAL?</b><br>For
simplicity, these tutorials are going to use NTSC numbers.&#xA0; Once we
finish our sound engine I&apos;ll try to whip up a tutorial about adding PAL
support.<br><br><b>Putting It All Together</b><br>Download and unzip the <a href="downloads/NerdyNightsSoundSourceCollection/periods.zip" target="_blank" original-href="http://tummaigames.com/periods.zip">periods.zip</a>
sample files.&#xA0; Make sure periods.asm, periods.chr, note_table.i and
periods.bat are all in the same folder as NESASM3, then double click
periods.bat. That will run NESASM3 and should produce the periods.nes
file. Run that NES file in FCEUXD SP.&#xA0; Use the d-pad to select and play
any note from our note table on the Square 1 channel.&#xA0; Controls are as
follows:<br><br><b>Up</b> - Play selected note<br><b>Down</b> - Stop note<br><b>Left</b> - Move selection down a note<br><b>Right</b> - Move selection up a note<br><br><b>Homework</b>:
Edit periods.asm and add support for the Square 2 and Triangle
channels.&#xA0; Allow the user to select between channels and play different
notes on all three of them.<br><br><b>Homework #2</b>: Read Disch&apos;s document <a href="http://nesdevhandbook.googlepages.com/theframe.html" target="_blank" original-href="http://nesdevhandbook.googlepages.com/theframe.html">The Frame and NMIs</a>.&#xA0;
Pay special attention to the &quot;Take Full Advantage of NMI&quot; section.&#xA0; We
are going to use this style of NMI handler with our sound engine.&#xA0; In
fact, periods.asm already uses it.<br><br><b>Next Week</b>: <a href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=23024" target="_blank" original-href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=23024">Starting our sound engine.</a><br><br><br><br><br><br>
				